#shader vertex
#version 330 core

layout(location = 0) in vec3 position;
layout(location = 0) in vec4 color;
layout(location = 0) in vec2 texCoord;
layout(location = 0) in float texIndex;

out vec3 o_Pos;
out vec3 o_Colorl
out vec2 o_TexCoord;
out float o_TexIndex;

uniform mat4 u_ViewProj;
uniform mat4 u_Transform;

void main()
{

    //gl_Position = position;
   // pos = gl_Position;
   o_Color = color;
   o_TexCoord = texCoord;
   o_TexIndex = texIndex;
   gl_Position = u_ViewProj * u_Transform *vec3(position, 1.0);
}



#shader fragment

#version 330 core
layout(location = 0) out vec4 color;

in vec3 o_Pos;
in vec4 o_Color;
in vec2 o_TexCoord;
in float o_TexIndex;

uniform sampler2D u_Textures[32];

void main()
{
 
    //vec3 g = mix(vec3(1.0,1.0,1.0),vec3(0.0,0.0,0.0),pos.x*2);
    //color = vec4(g, 1.0);
    int index = int(o_TexIndex);
    o_Color = texture(u_Textures[index], o_TexCoord)* o_Color;


}
